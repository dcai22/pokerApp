31/03/2025
https://www.youtube.com/watch?v=tducLYZzElo

POSTGRESQL
run psql with:
```bash
sudo -i -u postgres
psql
```

then if you need password, run `\password postgres`


FRONTEND
`npm run dev`

BACKEND
`npx tsx server.ts`



01/04/2025
https://www.youtube.com/watch?v=h7MTWLv3xvw
Since we are working with react-router v7, root.tsx should export the component App which contains <Outlet />
This uses the RouteConfig defined in routes.ts
The index route is the route corresponding to "/"

Routes depending on an id must export loader and action functions

02/04/2025
There was a problem in register.tsx where calling axios.put(...) with a duplicate username would cause an uncaught 400 error
I thought this was a problem with my backend route, but the solution was to wrap the axios.put(...) call with a try-catch block
For the backend, pool.query(...) can throw an error that needs to be caught in a try-catch block
However you cannot simply perform res.status(400), you need to do res.status(400).json(), i.e., there must be a `.json()`

03/04/2025
Request body can be sent in axios.get(...) and axios.delete(...) as follows:
```
await axios.get(
    URL,
    {
        data: {
            var1: val1,
            var2: val2,
        },
    }
);
```

TODO: add parameter checks to loaders
NOTE: parameter checks will be done with tokens stored in localStorage
      Token is purged upon loading the register and login routes (DONE)
      Token is created after successful register/login (DONE)
      all other routes will verify the token in their loader
TODO: change all names `hash` to either `hashedPassword` or `hashedToken`

04/04/2025
Many methods of dealing with tokens don't work due to this app using Server Side Rendering (SSR)
This is why I can't use localStorage or sessionStorage
Instead, I will store tokens in the url when redirecting
This new strategy will limit the user to a single session at a time
Revised plan for tokens:
 - Tokens will be added to the url for protected sites
    - Loader function for these sites will check the url
 - Register and login will create a new token upon success
 - Login will remove all other tokens from the database

I notice storing tokens in the URL is a security risk, so I will try using cookies:
https://reactrouter.com/explanation/sessions-and-cookies
TODO:
 - URLs should no longer have the player_id param for security purposes     (DONE)
    - The loader can process the token and return user details              (DONE)
 - Cookie is checked in loader of register/login                            (DONE)
    - A redirect is performed if a token is found                           (DONE)
 - Cookie is stored upon successful login/register                          (DONE)
 - All redirects should use commitSession() or similar                      (DONE)
 - Some way to automatically clear tokens from db                           **TODO**
NOTES:
 - session.flash(...) can be used to set a value temporarily, useful for errors

05/04/2025
TODO: Logout button on home                                                 (DONE)
Since Logout is a component, it can't access action, loader and header.
Those are linked to the server, while Logout is linked to the client.

06/04/2025
Using shadcn for frontend
